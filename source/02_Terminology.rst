
用語定義
========

.. glossary::

識別子
    変数、定数、関数およびC++の型を示す名前。プレフィックス+名前+サフィックスという構造を持つ場合がある。

クラス
    データ要素と、それを処理する関数を持つ、ユーザー定義の型。
    C++では、これをクラスとして宣言することもできるし、構造体や共用体として宣言することもできる。
    クラス内に定義した変数はメンバ変数と呼ばれ、クラス内に定義した関数はメンバ関数と呼ばれる。

抽象データ型
    publicまたはprotectedのメンバ変数を持たない、クラス、構造体、共用体。

構造体
    publicなメンバ変数のみで構成される構造体。

publicメンバ
    クラスのインスタンスとメンバの名前を特定すれば、どこからでもアクセスが可能なメンバ変数およびメンバ関数。

protectedメンバ
    メンバの名前を特定すれば、派生クラスのメンバ関数からアクセスが可能なメンバ変数およびメンバ関数。

テンプレートクラス
    クラスの集合を定義したもの。テンプレートクラスにいくつかの型名、または定数式を与えることで、
    新しいクラスが生成される。

テンプレート関数
    関数の集合を定義したもの。テンプレート関数にいくつかの型名、または定数式を与えることで、
    新しい関数が生成される。

列挙型
    整数定数の集合。C++では、enumとして宣言される。

typedef
    型の別名定義。

参照
    変数の別の名前。型の直後に&が指定された変数、定数、関数引数は、参照となる。

マクロ
    #define句で定義された、文字列の名前。ソースコード中にマクロが含まれる場合、コンパイラのプリプロセッサは、
    マクロを定義された文字列へと変換する。

コンストラクタ
    オブジェクトを初期化する関数。

コピーコンストラクタ
    初期化されるオブジェクトの参照のみを引数に持つコンストラクタ。

デフォルトコンストラクタ
    引数を持たないコンストラクタ。

関数オーバーロード
    異なる引数の型を持つ、２つ以上の同名のメンバ関数を定義すること。

関数オーバーライド
    virtualで定義された基底クラスのメンバ関数を、継承クラスで再定義すること。

基本型
    言語仕様で定義された、boolやintのようなデータ型。

ユーザー定義型
    プログラマによって定義された型。
    クラスや構造体、共用体、列挙型、typedef宣言、
    および、インスタンス化されたテンプレートクラス。

純粋仮想関数
    定義の存在しないメンバ関数。純粋仮想関数は抽象基底クラスに定義され、
    継承クラスでオーバーライドする必要がある。

アクセサ
    メンバ変数の値を返却する関数。

ミューテータ
    メンバ変数の値を変更する関数。

転送関数
    他の関数を呼び出すのみの関数。

constメンバ関数
    メンバ変数の値を変更しない関数。

例外
    関数内で検出されたプログラム実行時異常。
    異常が検出されると、throw句によって例外が例外ハンドラに送出され、
    統一的に管理される。

catch節
    例外発生時に、例外の型に応じて呼び出されるコード。
    例外ハンドラの記述は、catchで始まる、

抽象基底クラス
    継承されることを前提とし、それ自身ではインスタンス化できないクラス。
    抽象基底クラスは、少なくとも１つの純粋仮想関数を持つ。

イテレータ
    呼び出されると、オブジェクトの集合から次のオブジェクトを返すオブジェクト。

スコープ
    その定義が使用可能な範囲

コンパイル単位
    プリプロセッサ処理後に、コンパイル処理（構文チェックを含む）のため、
    コンパイラに渡るソースコード。